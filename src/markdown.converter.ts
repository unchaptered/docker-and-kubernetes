function getFormatedFolder(folderName: string) {
        // '1. Docker Core'
        // [ '1. ', 'Docker Core' ]
        const splitedFolder = folderName.split('. ');

        // 'Docker Core'
        const formatedFolder = splitedFolder[1];

        return formatedFolder
}
export function convertMarkdownFile(folderMap: Map<string, string[]>): string {
    let markdown = `
# Docker and Kubernetes

Learning for Docker and Kubernetes.
This README file is automatically generated by [![README Generator](https://github.com/unchaptered/docker-and-kubernetes/actions/workflows/generator-readme.yaml/badge.svg)](https://github.com/unchaptered/docker-and-kubernetes/actions/workflows/generator-readme.yaml)

## Foundations

- Docker
    - Images
        - Can be tagged (named)
        - Can be listed
        - Can be analyzed
        - Can be removed
    - Container
        - Can be named
        - Can be configured in detail
        - Can be listed
        - Can be removed

## Chapters

`;

    const BASE_URL = 'https://github.com/unchaptered/docker-and-kubernetes/tree/main/';

    const folderEntries = [...folderMap].sort();
    // console.log(folderEntries);
    for (let idx = 0; idx < folderEntries.length; idx ++) {

        // '1. Docker Core'
        const [ topFolder, secFolderList ] = folderEntries[idx];

        markdown += `${idx + 1}. [${getFormatedFolder(topFolder)}](${encodeURI(BASE_URL + topFolder)})\n`;
        for (let jdx = 0; jdx < secFolderList.length; jdx++) {
            markdown += `   ${jdx + 1}. [${getFormatedFolder(secFolderList[jdx])}](${encodeURI(BASE_URL + topFolder + secFolderList[jdx])})\n`;
        }

    }
    return markdown;
}
